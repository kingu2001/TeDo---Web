@page "/"
@using Library.Models
@using Library.Services
@inject ITestDocumentService testDocumentService
@inject IStorageService storageService

<h1 class="h1 text-center">List of Test Documents</h1>

@if (testDocuments?.Any() ?? false)
{
    <table class="document-list">
        <thead>
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">Introduction</th>
                <th scope="col">Definition and abbreviation</th>
                <th scope="col">Firm</th>
                <th scope="col">Participant</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in testDocuments)
            {
                <tr>
                    <td class="document-list-id">@item.Id</td>
                    <td class="document-list-name">@item.Name</td>
                    <td class="document-list-introduction">@item.Introduction</td>
                    <td class="document-list-firm">@item.Firms?.FirstOrDefault().Name</td>
                    <td class="document-list-Participant">@item.Participant?.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<TestDocument>? testDocuments { get; set; }

    protected override async Task OnInitializedAsync()
    {
        testDocuments = testDocumentService.GetAll();
        if (!testDocuments.Any())
        {
            await storageService.PopulateList();
            testDocuments = testDocumentService.GetAll();
            foreach (TestDocument item in testDocuments)
            {
                Console.WriteLine("---> " + item.Name);
            }
        }
        await base.OnInitializedAsync();
    }
}
